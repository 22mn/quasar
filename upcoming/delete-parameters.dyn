<Workspace Version="1.3.2.2480" X="237.941016515616" Y="22.9903940446017" zoom="0.813145682173102" ScaleFactor="1" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="2a6c16b7-97df-4bd1-bb41-ae1d410c24fd" type="PythonNodeModels.PythonNode" nickname="Python Script" x="663.638569119238" y="667.183579057161" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *
#The inputs to this node will be stored as a list in the IN variables.
dataEnteringNode = IN

#Assign your output to the OUT variable.
OUT = 0</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="1e9641f2-179f-4231-9e28-fe44d426642c" type="PythonNodeModels.PythonNode" nickname="Python Script" x="237.374275247223" y="-475.142908500233" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="true" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr

clr.AddReference('RevitAPI')
clr.AddReference("RevitServices")

from Autodesk.Revit.DB import *
from Autodesk.Revit.DB.Structure import *

from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

doc = DocumentManager.Instance.CurrentDBDocument

elements = IN[0]
todelete = []

if not isinstance(elements, list):
	elements = [elements]
"""
class_filter = ElementClassFilter(SharedParameterElement,True)

parameters = FilteredElementCollector(doc).OfClass(ParameterElement).WherePasses(class_filter).ToElements()
"""

parameters = FilteredElementCollector(doc).OfClass(ParameterElement).ToElements()

for elem in elements:
	for param in parameters:
		if param.Name == elem:
			todelete.append(param.Id)

TransactionManager.Instance.EnsureInTransaction(doc)

res = [doc.Delete(i) for i in todelete]
				

TransactionManager.Instance.TransactionTaskDone()


OUT = res</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="539b3c9d-6fc1-4116-86b9-d29f888f1229" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="-211.674491058414" y="236.699678419699" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="{&quot;ParamOne&quot;,&quot;ParamTwo&quot;,&quot;ParamThree&quot;};" ShouldFocus="false" />
    <PythonNodeModels.PythonNode guid="819aa324-7c07-4881-a781-a56c1c68c0a1" type="PythonNodeModels.PythonNode" nickname="RemoveParams" x="195.430072325734" y="231.210634395088" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script># dynamo version - 1.3.2
#(should be fine with 1.3.x or 2.x.x versions too)

import clr

clr.AddReference('RevitAPI')
clr.AddReference("RevitServices")

from Autodesk.Revit.DB import *
from Autodesk.Revit.DB.Structure import *

from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

doc = DocumentManager.Instance.CurrentDBDocument

# input[0]
elements = IN[0]
# params id
todelete = []

# check/make list
if not isinstance(elements, list):
	elements = [elements]
	
# collect parameters
parameters = FilteredElementCollector(doc).OfClass(ParameterElement).ToElements()

# loop input params
for elem in elements:
	# loop existing params
	for param in parameters:
		# if name found
		if param.Name == elem:
			# append id to delete list
			todelete.append(param.Id)

# start transaction
TransactionManager.Instance.EnsureInTransaction(doc)
# delete from document
res = [doc.Delete(i) for i in todelete]
# end transaction				
TransactionManager.Instance.TransactionTaskDone()

OUT = res</Script>
    </PythonNodeModels.PythonNode>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="539b3c9d-6fc1-4116-86b9-d29f888f1229" start_index="0" end="819aa324-7c07-4881-a781-a56c1c68c0a1" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>