<Workspace Version="1.3.2.2480" X="71.6423032792124" Y="466.952414878289" zoom="0.647174757064285" ScaleFactor="1" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="029c5f80-30b8-4087-ad41-8471a7b92832" type="PythonNodeModels.PythonNode" nickname="CreateRebarCoverType" x="-7.97149386639269" y="-173.086941530031" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>import clr

clr.AddReference('RevitAPI')
clr.AddReference("RevitServices")

from Autodesk.Revit.DB import *
from Autodesk.Revit.DB.Structure import *

from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

doc = DocumentManager.Instance.CurrentDBDocument

cover_desc = IN[0] if IN[0] else "NewType"
cover_setting = IN[1]/304.8 if IN[1] else 25/304.8

TransactionManager.Instance.EnsureInTransaction(doc)

newtype = RebarCoverType.Create(doc,cover_desc, cover_setting)

TransactionManager.Instance.TransactionTaskDone()


OUT = newtype
</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="784f91d7-f6dc-4004-b070-79a95e1f188c" type="PythonNodeModels.PythonNode" nickname="SetFramingRebarCoverType" x="360.466032100719" y="-281.765567864041" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="true" isPinned="true" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>import clr

clr.AddReference('RevitAPI')
clr.AddReference("RevitServices")

from Autodesk.Revit.DB import *
from Autodesk.Revit.DB.Structure import *

from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

doc = DocumentManager.Instance.CurrentDBDocument

framings = IN[0]
covertype = UnwrapElement(IN[1])
params = ["Rebar Cover - Top Face","Rebar Cover - Bottom Face",
"Rebar Cover - Other Faces"]

if isinstance(framings, list):
	framings = UnwrapElement(framings)
else:
	framings = UnwrapElement([framings])

TransactionManager.Instance.EnsureInTransaction(doc)

for framing in framings:
	for param in params:
		framing.LookupParameter(param).Set(covertype.Id)

TransactionManager.Instance.TransactionTaskDone()


OUT = framings
</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Nodes.DSModelElementsSelection guid="50b9c9f9-f417-4f07-87d5-6e40744a5ce0" type="Dynamo.Nodes.DSModelElementsSelection" nickname="Select Model Elements" x="-89.8846333101976" y="-395.497966958531" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <instance id="ea528e8a-eb10-4176-8ea9-9aa166510847-00054391" />
      <instance id="ea528e8a-eb10-4176-8ea9-9aa166510847-000543a4" />
    </Dynamo.Nodes.DSModelElementsSelection>
    <PythonNodeModels.PythonNode guid="c7bec32b-5ea4-4b43-a11c-db9300097e53" type="PythonNodeModels.PythonNode" nickname="GetFramingRebarCoverType" x="633.253850722682" y="-611.593798227963" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>import clr

clr.AddReference('RevitAPI')
clr.AddReference("RevitServices")

from Autodesk.Revit.DB import *
from Autodesk.Revit.DB.Structure import *

from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

doc = DocumentManager.Instance.CurrentDBDocument

framings = IN[0]

if isinstance(framings, list):
	framings = UnwrapElement(framings)
else:
	framings = UnwrapElement([framings])

top,btm, others = [],[],[]
#TransactionManager.Instance.EnsureInTransaction(doc)

for framing in framings:
	toptype = framing.LookupParameter("Rebar Cover - Top Face").AsElementId()
	top.append(doc.GetElement(toptype))
	btmtype = framing.LookupParameter("Rebar Cover - Bottom Face").AsElementId()
	btm.append(doc.GetElement(btmtype))
	otherstype = framing.LookupParameter("Rebar Cover - Other Faces").AsElementId()
	others.append(doc.GetElement(otherstype))

#TransactionManager.Instance.TransactionTaskDone()


OUT = top, btm, others
</Script>
    </PythonNodeModels.PythonNode>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="029c5f80-30b8-4087-ad41-8471a7b92832" start_index="0" end="784f91d7-f6dc-4004-b070-79a95e1f188c" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="50b9c9f9-f417-4f07-87d5-6e40744a5ce0" start_index="0" end="784f91d7-f6dc-4004-b070-79a95e1f188c" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="50b9c9f9-f417-4f07-87d5-6e40744a5ce0" start_index="0" end="c7bec32b-5ea4-4b43-a11c-db9300097e53" end_index="0" portType="0" />
  </Connectors>
  <Notes>
    <Dynamo.Graph.Notes.NoteModel guid="f43ac86e-27ed-4e0a-8b01-a774fc87ad13" text="IN[0] = Description&#xD;&#xA;IN[0] = Setting (mm)" x="4.40212359004909" y="-227.817466562221" />
    <Dynamo.Graph.Notes.NoteModel guid="953eb991-cce5-454c-8049-77faa3b6eb16" text="IN[0] = Framings&#xD;&#xA;IN[1] = RebarCoverType" x="367.605706785651" y="-335.057977077329" />
    <Dynamo.Graph.Notes.NoteModel guid="7136c304-dbba-49e3-bba0-284afac647c5" text="IN[0] = Framings" x="675.550079936362" y="-647.292169786981" />
  </Notes>
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>