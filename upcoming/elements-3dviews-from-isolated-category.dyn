<Workspace Version="1.3.2.2480" X="765.669484177969" Y="-642.879847356573" zoom="0.952292072321246" ScaleFactor="1" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap>
    <ClassMap partialName="DSCore.List" resolvedName="DSCore.List" assemblyName="DSCoreNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <CoreNodeModels.Input.DoubleSlider guid="d5e5cb85-1767-4017-b37d-a30cdef946e3" type="CoreNodeModels.Input.DoubleSlider" nickname="Number Slider" x="-788.262572640769" y="1001.70826402038" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.Double>100</System.Double>
      <Range min="100" max="300" step="10" />
    </CoreNodeModels.Input.DoubleSlider>
    <PythonNodeModels.PythonNode guid="90b97645-d763-4364-8f7d-1afcf143d6e2" type="PythonNodeModels.PythonNode" nickname="Python Scripts" x="-386.706454203045" y="1000.51588805281" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script># dynamo version - 1.3.0
# author - mgjean
import clr
import System
clr.AddReference("RevitAPI")
clr.AddReference("RevitServices")

import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from Autodesk.Revit.DB import *

doc = DocumentManager.Instance.CurrentDBDocument

# offset from section box (mm)
offset = IN[0]/304.8

# output list
result =[]

# collect filtered elements by category
elements = FilteredElementCollector(doc,doc.ActiveView.Id).WhereElementIsNotElementType().ToElements()


def crop_box(bbox, offset):
	# modify x,y,z point of bbox
	minX = bbox.Min.X - offset
	minY = bbox.Min.Y - offset
	minZ = bbox.Min.Z - offset
	maxX = bbox.Max.X + offset
	maxY = bbox.Max.Y + offset
	maxZ = bbox.Max.Z + offset
	# create new bbox
	newbox = BoundingBoxXYZ()
	newbox.Min = XYZ(minX,minY, minZ)
	newbox.Max = XYZ(maxX, maxY, maxZ)
	return newbox

# collect view type in document
viewTypes = FilteredElementCollector(doc).OfClass(ViewFamilyType)
#loop view types
for i in viewTypes:
	# floor plane view type
	if i.ViewFamily == ViewFamily.ThreeDimensional:
		# get type id
		viewTypeId = i.Id
		break

# start Transaction
TransactionManager.Instance.EnsureInTransaction(doc)
increment = 1
for elem in elements:
	viewName = elem.Symbol.FamilyName

	# create new bbox by current bbox and offset
	bbox = crop_box(elem.BoundingBox[doc.ActiveView],offset)
	
	# create 3D View
	view = View3D.CreateIsometric(doc, viewTypeId)
	try:
		# set view name
		view.Name = viewName
	except:
		view.Name = viewName +" ("+ str(increment)+")"
		increment+=1
	# set sectionbox to bbox
	view.SetSectionBox(bbox)
	# set cropbox active
	view.CropBoxActive = True
	# set cropbox visibility
	view.CropBoxVisible = True
	# set view scale
	view.Scale = 25
	# set detail level to fine
	view.DetailLevel = ViewDetailLevel.Fine
	# set detail style to realistic
	view.DisplayStyle = DisplayStyle.Realistic

	# append it to results
	result.append(view)
	
# end Transaction
TransactionManager.Instance.TransactionTaskDone()

# output results
OUT = elements

</Script>
    </PythonNodeModels.PythonNode>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="d5e5cb85-1767-4017-b37d-a30cdef946e3" start_index="0" end="90b97645-d763-4364-8f7d-1afcf143d6e2" end_index="0" portType="0" />
  </Connectors>
  <Notes>
    <Dynamo.Graph.Notes.NoteModel guid="b2ee9cb5-efb5-4d1a-91a7-55cf4c53a428" text="IN[0] = SectionBox offset from element ( Unit : millimeters)" x="-442.591773627604" y="946.256400999417" />
  </Notes>
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>