<Workspace Version="1.3.2.2480" X="-462.672082955106" Y="-125.862090736908" zoom="0.766189997407435" ScaleFactor="1" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap>
    <ClassMap partialName="Line" resolvedName="Autodesk.DesignScript.Geometry.Line" assemblyName="ProtoGeometry.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <PythonNodeModels.PythonNode guid="fde58f22-fd4e-4f6c-b7b3-6f08d2e45331" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1004.27892663779" y="326.416351636486" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="3">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <Script>import clr,math

clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *


clr.AddReference("RevitAPI")
clr.AddReference("RevitServices")
from Autodesk.Revit.DB import FilteredElementCollector, Grid
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
clr.ImportExtensions(Revit.GeometryConversion)

doc = DocumentManager.Instance.CurrentDBDocument
grids = FilteredElementCollector(doc).OfClass(Grid).ToElements()


direction = IN[0]
startfrom = IN[1]
reverse = IN[2] if IN[2] else False

tosort = []

for grid in grids:
	line = grid.ToDSType(False).Curve
	if direction == 'X' and math.fabs(line.Direction.X) &gt; 50:
		tosort.append((grid, line.StartPoint.Y))
	
	if direction == 'Y' and math.fabs(line.Direction.Y) &gt; 50:
		tosort.append((grid, line.StartPoint.X))
		
res = sorted(tosort, key = lambda x: x[1])


pre_naming = startfrom
naming = startfrom

sorted_grids = [i[0] for i in res]

if reverse:
	sorted_grids.reverse()

def grid_num(n):
	n = int(n)
	for grid in sorted_grids:
		try:
			grid.Name = str(n)
		except:
			grid.Name = str(n) + "'"
		n += 1
		
		
def grid_str(n):
	n = ord(n)
	for grid in sorted_grids:
		try:
			grid.Name = chr(n)
		except:
			grid.Name = chr(n) + "'"
		n += 1
		

TransactionManager.Instance.EnsureInTransaction(doc)

if startfrom.isdigit():
	grid_num(pre_naming)
	grid_num(naming)
else:
	grid_str(pre_naming)
	grid_str(naming)

TransactionManager.Instance.TransactionTaskDone()


OUT = sorted_grids






</Script>
    </PythonNodeModels.PythonNode>
    <CoreNodeModels.Input.StringInput guid="14bd1743-07ec-409b-aa8c-a195247d052d" type="CoreNodeModels.Input.StringInput" nickname="String" x="819.637056582117" y="321.06110210123" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.String>X</System.String>
      <System.String value="X" />
    </CoreNodeModels.Input.StringInput>
    <CoreNodeModels.Input.StringInput guid="2768b730-9403-466f-b385-21bfb1391322" type="CoreNodeModels.Input.StringInput" nickname="String" x="820.995963838995" y="384.507293399717" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.String>111</System.String>
      <System.String value="111" />
    </CoreNodeModels.Input.StringInput>
    <CoreNodeModels.Input.BoolSelector guid="39a343ef-2876-4561-8765-58484a725a76" type="CoreNodeModels.Input.BoolSelector" nickname="Boolean" x="751.891381132133" y="449.58941802592" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <System.Boolean>False</System.Boolean>
    </CoreNodeModels.Input.BoolSelector>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="14bd1743-07ec-409b-aa8c-a195247d052d" start_index="0" end="fde58f22-fd4e-4f6c-b7b3-6f08d2e45331" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="2768b730-9403-466f-b385-21bfb1391322" start_index="0" end="fde58f22-fd4e-4f6c-b7b3-6f08d2e45331" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="39a343ef-2876-4561-8765-58484a725a76" start_index="0" end="fde58f22-fd4e-4f6c-b7b3-6f08d2e45331" end_index="2" portType="0" />
  </Connectors>
  <Notes>
    <Dynamo.Graph.Notes.NoteModel guid="7552693f-9f2f-435d-9bb2-e1214eff59ef" text="IN[0] =  X (Horizontal) or Y (Vertical)[string]&#xD;&#xA;IN[1] = startfrom (number or alphabet) [string]&#xD;&#xA;IN[2] = reverse [boolean]" x="939.367537323386" y="243.657455316384" />
  </Notes>
  <Annotations>
    <Dynamo.Graph.Annotations.AnnotationModel guid="1065b354-970b-4bd0-b30e-b0da590fb04c" annotationText="" left="929.367537323386" top="197.657455316384" width="286.4" height="272.558896320102" fontSize="30" InitialTop="243.657455316384" InitialHeight="247.340172707098" TextblockHeight="36" backgrouund="#FFFFFFFF">
      <Models ModelGuid="fde58f22-fd4e-4f6c-b7b3-6f08d2e45331" />
      <Models ModelGuid="7552693f-9f2f-435d-9bb2-e1214eff59ef" />
    </Dynamo.Graph.Annotations.AnnotationModel>
  </Annotations>
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-1414.59558105469" eyeY="18102.61328125" eyeZ="3194.24145507813" lookX="26.3905220031738" lookY="-19912.298828125" lookZ="-3089.76586914063" upX="0.00796297285705805" upY="0.361624598503113" upZ="-0.932289838790894" />
  </Cameras>
</Workspace>