<Workspace Version="1.3.2.2480" X="-72.3203163353117" Y="26.64038347181" zoom="0.70823125" ScaleFactor="1" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap />
  <Elements>
    <Dynamo.Graph.Nodes.CustomNodes.Function guid="7c51a2bc-2ec5-4050-ab30-e0230b14c042" type="Dynamo.Graph.Nodes.CustomNodes.Function" nickname="GetAllWorksets" x="157.898719521343" y="183.061916570329" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <ID value="71cef8ca-325e-4d0b-80df-1a6f349e3093" />
      <Name value="GetAllWorksets" />
      <Description value="Collect all user created worksets from current document." />
      <Inputs />
      <Outputs>
        <Output value="NameAndWorkset" />
      </Outputs>
    </Dynamo.Graph.Nodes.CustomNodes.Function>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="3f21357b-cb38-4d12-9e3a-1bb313fad023" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="415.664890528341" y="215.304254436669" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="i[0][1];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <PythonNodeModels.PythonNode guid="6314c07c-fff4-45a4-b5e5-3cd1f18d0297" type="PythonNodeModels.PythonNode" nickname="UICollectElementsByWorksets" x="195.502470972882" y="278.85443457554" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="true" isPinned="true" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script># dynamo version - 1.3.2
# author - min.naung/mgjean https://twentytwo.space/contact

import clr,sys
sys.path.append(r"C:\Program Files (x86)\IronPython 2.7\Lib")
import os, System

clr.AddReference("RevitAPI")
clr.AddReference("RevitServices")

from Autodesk.Revit.DB import *
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager


clr.AddReference("System.Windows.Forms")
clr.AddReference("System.Drawing")


from System.Collections.Generic import List
from System.Windows.Forms import (Application, Button, ComboBox, CheckBox, Form as _Form,
CheckedListBox,Padding,FormBorderStyle, SelectionMode,Label, MessageBox,MessageBoxButtons, MessageBoxIcon)
from System.Drawing import (Font as _Font, Icon as _Icon, Point as _Point, Size as _Size,FontStyle)

doc = DocumentManager.Instance.CurrentDBDocument
# record all elements { name : id }
NameIdDict = {}

# collect user created worksets
worksets = FilteredWorksetCollector(doc).OfKind(WorksetKind.UserWorkset).ToWorksets()

for workset in worksets:
	# record template {name : id} 
	NameIdDict[str(workset.Name)] = workset.Id	

class CheckedBoxListSelector(_Form):
	"""Checked Box List Selector"""

	def __init__(self):
		self.selectedElements = []		
		
		
		self.Size = _Size(360,460)


		# fonts
		self.gsmt_11r = _Font("Georgia", 10)
		self.gsmt_10r = _Font("Georgia",9)
		
		# label
		self.label = Label()
		self.label.Text = "Select Worksets: "
		self.label.Font = self.gsmt_11r
		self.label.Location = _Point(30,10)
		self.label.Size = _Size(220,28)
		self.Controls.Add(self.label)
		
		# checklist box
		self.lstbox = CheckedListBox()
		self.lstbox.Items.AddRange(tuple(sorted(NameIdDict.keys())))
		self.lstbox.Font = self.gsmt_10r
		# padding
		self.lstbox.Padding = Padding(30)
		# select one click
		self.lstbox.CheckOnClick = True
		# style
		self.lstbox.ThreeDCheckBoxes = True

		self.FormBorderStyle = FormBorderStyle.FixedDialog
		self.MaximizeBox = False;
		self.ManimizeBox = False;
		self.lstbox.Location = _Point(30,45)
		self.lstbox.Size = _Size(280,300)

		# auto horizontal scrollbar
		self.lstbox.HorizontalScrollbar = True
		self.Controls.Add(self.lstbox)
		

		# select all btn
		self.btn_all = Button()
		self.btn_all.Text = "Select All"
		self.btn_all.Font = self.gsmt_10r
		self.btn_all.Size = _Size(95,25)
		self.btn_all.Location = _Point(30,375)
		self.Controls.Add(self.btn_all)

		# select none btn
		self.btn_none = Button()
		self.btn_none.Text = "Select None"
		self.btn_none.Font = self.gsmt_10r
		self.btn_none.Size = _Size(95,25)
		self.btn_none.Location = _Point(215,375)
		self.Controls.Add(self.btn_none)

		# ok btn
		self.btn = Button()
		self.btn.Text = "OK"
		self.btn.Font = self.gsmt_10r
		self.btn.Size = _Size(80,25)
		self.btn.Location = _Point(130,375)
		self.Controls.Add(self.btn)

		# events
		self.btn_all.Click += self.click_all
		self.btn_none.Click += self.click_none
		self.btn.Click += self.click_ok 

		# pop up from center
		self.CenterToScreen()

	def click_ok(self, sender, event):
		#global result
		if len(self.lstbox.CheckedItems) &lt; 1:
			return MessageBox.Show("No element selected!", "QuasarÂ® Info Box", MessageBoxButtons.OK, MessageBoxIcon.Asterisk)
		
		self.result = self.lstbox.CheckedItems
		
		return self.Close()		

	def click_all(self, sender, event):
		for i in range(len(self.lstbox.Items)):
			self.lstbox.SetItemChecked(i,True)

	def click_none(self, sender, event):
		for i in range(len(self.lstbox.Items)):
			self.lstbox.SetItemChecked(i,False)
	
		
# instantiate class		
ui = CheckedBoxListSelector()
# run class
Application.Run(ui)

selected_worksets = sorted(ui.result)

elements = []
for selected_workset in selected_worksets:
	filter = ElementWorksetFilter(NameIdDict[selected_workset])
	collect = FilteredElementCollector(doc).WherePasses(filter).ToElements()
	elements.append(collect)

OUT = elements



</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Function guid="96e801f2-859e-4415-a2f9-b6e1fb81fdf0" type="Dynamo.Graph.Nodes.CustomNodes.Function" nickname="AllElementsOfWorkset" x="671.903854267285" y="233.251435078962" isVisible="true" isUpstreamVisible="true" lacing="Shortest" isSelectedInput="False" IsFrozen="false" isPinned="true">
      <PortInfo index="0" default="False" />
      <ID value="d95914d3-d3e8-4568-a830-a25bd192237e" />
      <Name value="AllElementsOfWorkset" />
      <Description value="Collect all elements from input workset." />
      <Inputs>
        <Input value="workset" />
      </Inputs>
      <Outputs>
        <Output value="Elements" />
      </Outputs>
    </Dynamo.Graph.Nodes.CustomNodes.Function>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="7c51a2bc-2ec5-4050-ab30-e0230b14c042" start_index="0" end="3f21357b-cb38-4d12-9e3a-1bb313fad023" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="3f21357b-cb38-4d12-9e3a-1bb313fad023" start_index="0" end="96e801f2-859e-4415-a2f9-b6e1fb81fdf0" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="15121.8769685405" eyeY="23704.3131388975" eyeZ="7926.38589083202" lookX="112.73349855794" lookY="-18324.8822401903" lookZ="-7262.04042040637" upX="0.0128681529411369" upY="0.559192903470746" upZ="-0.828937698109959" />
  </Cameras>
</Workspace>