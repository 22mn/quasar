<Workspace Version="1.3.2.2480" X="-150.405847291365" Y="-263.434279965581" zoom="0.692004707491244" ScaleFactor="1" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="a0efc28c-98d5-467c-bdc3-3bf7feadfe00" type="PythonNodeModels.PythonNode" nickname="Python Script" x="265.972064524033" y="617.009242334996" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="0">
      <Script># dynamo version - 1.3.0 
# author - min.naung@mgjean https://twentytwopaths.wordpress.com/contact/


import clr
clr.AddReference("RevitAPI")
clr.AddReference("RevitServices")

from Autodesk.Revit.DB import *
from RevitServices.Persistence import DocumentManager

doc = DocumentManager.Instance.CurrentDBDocument;
link_docs = FilteredElementCollector(doc).OfClass(RevitLinkInstance);

OUT = [[i.Name.split(":")[0],i.GetLinkDocument()] for i in link_docs];
</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="b4e46980-fe6e-429b-a53b-7a40b8491676" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="414.334916386753" y="618.932320853221" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="i[0][1];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <PythonNodeModels.PythonNode guid="280a3e10-6b19-4395-bc70-fac8161c429e" type="PythonNodeModels.PythonNode" nickname="TransferLegend" x="990.292583883753" y="561.245885139295" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="3">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <Script># dynamo version - 1.3.2
# author - min.naung/mgjean https://twentytwo.space/contact


import clr
clr.AddReference('RevitAPI')
clr.AddReference("RevitServices")
import System
from Autodesk.Revit.DB import *
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from System.Collections.Generic import List
# get current document 
doc = DocumentManager.Instance.CurrentDBDocument


linkdoc = IN[0]
link_legend = UnwrapElement(IN[1])
doc_legend = UnwrapElement(IN[2])
view_names = []

result = []

TransactionManager.Instance.EnsureInTransaction(doc)

for view , view_copy in zip(link_legend,doc_legend):
	
	view_names.append(str(view_copy.ViewName))
	
	elements = FilteredElementCollector(linkdoc,view.Id).ToElements()
	element_ids = []
	for e in elements:
		try:
			element_ids.append(e.Id)
		except:
			continue
	elemIdList = List[ElementId](element_ids)
	copy_element = ElementTransformUtils.CopyElements(view,elemIdList,view_copy,Transform.Identity,CopyPasteOptions())
	doc.Delete(view_copy.Id)

views = FilteredElementCollector(doc).OfClass(View).ToElements()
legends = [v for v in views if v.ViewType == ViewType.Legend]
res = []
for i in legends:
	for j in view_names:
		if j[-1].isdigit():
			if j[:-1] == str(i.ViewName)[:-1]:
				i.ViewName = j
				res.append(i)				
		else:			
			if j[:-1] == str(i.ViewName)[:-2]:
				i.ViewName = j
				res.append(i)
			
TransactionManager.Instance.TransactionTaskDone()

OUT = res


</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="764b7e3b-a567-48f6-84ee-482d057408d2" type="PythonNodeModels.PythonNode" nickname="CopyView" x="764.010755866877" y="724.552650179912" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>
# dynamo version - 1.3.2
# author - min.naung/mgjean https://twentytwo.space/contact

import clr
clr.AddReference('RevitAPI')
clr.AddReference("RevitServices")
import System
from Autodesk.Revit.DB import *
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from System.Collections.Generic import List
# get current document 
doc = DocumentManager.Instance.CurrentDBDocument

# a link document
linkdoc = IN[0]

# legend views from link document
if isinstance(IN[1],list):
	link_legend_views = UnwrapElement(IN[1])
else:
	link_legend_views = UnwrapElement([IN[1]])

# create id list
views_ids = [v.Id for v in link_legend_views]

# make dotNet ElementId list
dotList = List[ElementId](views_ids)

# transaction start
TransactionManager.Instance.EnsureInTransaction(doc)

# copy legend view to current document
# this will copy only view without elements
copy_views = ElementTransformUtils.CopyElements(linkdoc,dotList,doc,Transform.Identity,CopyPasteOptions())

# transaction end
TransactionManager.Instance.TransactionTaskDone()

# copied views
OUT = [doc.GetElement(i) for i in copy_views]

</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="b5afc3d2-1fca-4924-9348-2e38ac58fdda" type="PythonNodeModels.PythonNode" nickname="LinkLegendViews" x="508.048000133316" y="764.838887714186" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script>
# dynamo version - 1.3.2
# author - min.naung/mgjean https://twentytwo.space/contact

# dynamo version 1.3.2
import clr
clr.AddReference('RevitAPI')
clr.AddReference("RevitServices")
import System
from Autodesk.Revit.DB import *
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from System.Collections.Generic import List
# get current document 
doc = DocumentManager.Instance.CurrentDBDocument

# a link document
linkdoc = IN[0]

# collect view from link document
collector = FilteredElementCollector(linkdoc).OfClass(View).ToElements()
# collect legend view
views = [v for v in collector if v.ViewType== ViewType.Legend]

# copied views
OUT = views

</Script>
    </PythonNodeModels.PythonNode>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="a0efc28c-98d5-467c-bdc3-3bf7feadfe00" start_index="0" end="b4e46980-fe6e-429b-a53b-7a40b8491676" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b4e46980-fe6e-429b-a53b-7a40b8491676" start_index="0" end="280a3e10-6b19-4395-bc70-fac8161c429e" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b4e46980-fe6e-429b-a53b-7a40b8491676" start_index="0" end="b5afc3d2-1fca-4924-9348-2e38ac58fdda" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b4e46980-fe6e-429b-a53b-7a40b8491676" start_index="0" end="764b7e3b-a567-48f6-84ee-482d057408d2" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="764b7e3b-a567-48f6-84ee-482d057408d2" start_index="0" end="280a3e10-6b19-4395-bc70-fac8161c429e" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b5afc3d2-1fca-4924-9348-2e38ac58fdda" start_index="0" end="764b7e3b-a567-48f6-84ee-482d057408d2" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="b5afc3d2-1fca-4924-9348-2e38ac58fdda" start_index="0" end="280a3e10-6b19-4395-bc70-fac8161c429e" end_index="1" portType="0" />
  </Connectors>
  <Notes>
    <Dynamo.Graph.Notes.NoteModel guid="04efa11b-e655-4db8-bbcf-c5070e2b4531" text="Each list includes [DocumentName, Document]" x="156.397686901648" y="558.979895193054" />
  </Notes>
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="4515.37646484375" eyeY="3164.48828125" eyeZ="3077.32080078125" lookX="1058.88610839844" lookY="-3469.67993164063" lookZ="-5117.94970703125" upX="0.0732671618461609" upY="0.932323813438416" upZ="-0.354124635457993" />
  </Cameras>
</Workspace>