<Workspace Version="1.3.2.2480" X="-878.22056871632" Y="-51.4371133160546" zoom="0.749823941572421" ScaleFactor="1" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap>
    <ClassMap partialName="DSCore.List" resolvedName="DSCore.List" assemblyName="DSCoreNodes.dll" />
    <ClassMap partialName="DSCore.List.List" resolvedName="DSCore.List" assemblyName="DSCoreNodes.dll" />
    <ClassMap partialName="Math" resolvedName="DSCore.Math" assemblyName="DSCoreNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <DSRevitNodesUI.Categories guid="2718ca18-b38a-410d-a1dd-b5843c186e4b" type="DSRevitNodesUI.Categories" nickname="Categories" x="658.960206451354" y="378.048344085875" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false" index="481:StructuralColumns" />
    <DSRevitNodesUI.ElementsOfCategory guid="22f95931-e9e6-436d-9df0-11094fb25be3" type="DSRevitNodesUI.ElementsOfCategory" nickname="All Elements of Category" x="901.360206451354" y="383.648344085875" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
    </DSRevitNodesUI.ElementsOfCategory>
    <DSRevitNodesUI.Categories guid="7d333efb-cdd7-442e-88fd-dbc75953f1e6" type="DSRevitNodesUI.Categories" nickname="Categories" x="649.18341645706" y="573.476079757143" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false" index="331:PipeCurves" />
    <DSRevitNodesUI.ElementsOfCategory guid="8547be3b-2a1c-4183-b206-f42716a48e1c" type="DSRevitNodesUI.ElementsOfCategory" nickname="All Elements of Category" x="898.093130666977" y="561.743462793138" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
    </DSRevitNodesUI.ElementsOfCategory>
    <PythonNodeModels.PythonNode guid="e595a9f4-d0ef-4666-854c-f84d41105489" type="PythonNodeModels.PythonNode" nickname="Python Script" x="1312.5001250263" y="421.321491480551" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>
import clr

clr.AddReference('ProtoGeometry')
clr.AddReference('RevitNodes')
clr.AddReference('RevitAPI')
clr.AddReference('DSCoreNodes')

import Revit
clr.ImportExtensions(Revit.Elements)
clr.ImportExtensions(Revit.GeometryConversion)


from Autodesk.DesignScript.Geometry import *
from Autodesk.Revit.DB import *


elems = UnwrapElement(IN[0])
others = UnwrapElement(IN[1])

stiffener = []

def dyn_geo(e):
	# get geo-objects of the element
	geoelem = e.GetGeometryObjectFromReference(Reference(e))
	# get enumerator to loop geo-objects
	geoobj = geoelem.GetEnumerator()
	# loop geo-objector
	for obj in geoobj:
		# convert to dynamo type
		try:
			geo = obj.ToProtoType()
		except:
			inobj = obj.GetInstanceGeometry()
			for obj in inobj:
				geo = obj.ToProtoType()
		
	# return geometry
	return geo

# to collect intersets
# loop elems
for elem in elems:
	# loop others
	for other in others:
		# find intersect geo
		elem_geo = dyn_geo(elem)
		other_geo = dyn_geo(other)
		intersect = Geometry.Intersect(elem_geo, other_geo)
		# if intersect
		if intersect:
			# pipe diameter 
			stiffener.append(elem)
			
OUT = stiffener





</Script>
    </PythonNodeModels.PythonNode>
    <PythonNodeModels.PythonNode guid="4ca7f047-0ece-4ce0-bbbf-400211178217" type="PythonNodeModels.PythonNode" nickname="Python Scripts" x="1637.80125914773" y="520.364072946345" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script># dynamo version - 1.3.0
# author - mgjean
import clr
import System
clr.AddReference("RevitAPI")
clr.AddReference("RevitServices")

import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
from Autodesk.Revit.DB import *

doc = DocumentManager.Instance.CurrentDBDocument

# output list
result =[]

# elements input
elements = UnwrapElement(IN[0])

# offset from section box (mm)
offset = IN[1]/304.8


def crop_box(bbox, offset):
	# modify x,y,z point of bbox
	minX = bbox.Min.X - offset
	minY = bbox.Min.Y - offset
	minZ = bbox.Min.Z - offset
	maxX = bbox.Max.X + offset
	maxY = bbox.Max.Y + offset
	maxZ = bbox.Max.Z + offset
	# create new bbox
	newbox = BoundingBoxXYZ()
	newbox.Min = XYZ(minX,minY, minZ)
	newbox.Max = XYZ(maxX, maxY, maxZ)
	return newbox

# collect view type in document
viewTypes = FilteredElementCollector(doc).OfClass(ViewFamilyType)
#loop view types
for i in viewTypes:
	# floor plane view type
	if i.ViewFamily == ViewFamily.ThreeDimensional:
		# get type id
		viewTypeId = i.Id
		break

# start Transaction
TransactionManager.Instance.EnsureInTransaction(doc)
increment = 1
for elem in elements:
	viewName = elem.LookupParameter("Mark").AsString()

	# create new bbox by current bbox and offset
	bbox = crop_box(elem.BoundingBox[doc.ActiveView],offset)
	
	# create 3D View
	view = View3D.CreateIsometric(doc, viewTypeId)
	try:
		# set view name
		view.Name = viewName
	except:
		view.Name = str(viewName) +" ("+ str(increment)+")"
		increment+=1
	# set sectionbox to bbox
	view.SetSectionBox(bbox)
	# set cropbox active
	view.CropBoxActive = True
	# set cropbox visibility
	view.CropBoxVisible = True
	# set view scale
	view.Scale = 25
	# set detail level to fine
	view.DetailLevel = ViewDetailLevel.Fine
	# set detail style to realistic
	view.DisplayStyle = DisplayStyle.HDL

	# append it to results
	result.append(view)
	
# end Transaction
TransactionManager.Instance.TransactionTaskDone()

# output results
OUT = result

</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="2ddf9ebb-1117-4be1-adc0-070b3ecdfd7d" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="1344" y="726" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="100;" ShouldFocus="false" />
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="2718ca18-b38a-410d-a1dd-b5843c186e4b" start_index="0" end="22f95931-e9e6-436d-9df0-11094fb25be3" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="22f95931-e9e6-436d-9df0-11094fb25be3" start_index="0" end="e595a9f4-d0ef-4666-854c-f84d41105489" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7d333efb-cdd7-442e-88fd-dbc75953f1e6" start_index="0" end="8547be3b-2a1c-4183-b206-f42716a48e1c" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="8547be3b-2a1c-4183-b206-f42716a48e1c" start_index="0" end="e595a9f4-d0ef-4666-854c-f84d41105489" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="e595a9f4-d0ef-4666-854c-f84d41105489" start_index="0" end="4ca7f047-0ece-4ce0-bbbf-400211178217" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="2ddf9ebb-1117-4be1-adc0-070b3ecdfd7d" start_index="0" end="4ca7f047-0ece-4ce0-bbbf-400211178217" end_index="1" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-4904.681640625" eyeY="8451.3720703125" eyeZ="6733.97705078125" lookX="5678.6416015625" lookY="-6983.94140625" lookZ="-6746.1435546875" upX="0.282302975654602" upY="0.898793995380402" upZ="-0.335371851921082" />
  </Cameras>
</Workspace>