<Workspace Version="1.3.2.2480" X="-125.064" Y="227.734" zoom="1.1575" ScaleFactor="1" Name="DynamoNodes.DiamondPanel" Description="Surface divides to diamond panels and triangle panels by UV divisions." ID="edafe6a1-b239-4100-b6a7-0303ddc655f2" Category="Quasar.DynamoNodes">
  <NamespaceResolutionMap>
    <ClassMap partialName="Surface" resolvedName="Autodesk.DesignScript.Geometry.Surface" assemblyName="ProtoGeometry.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <PythonNodeModels.PythonNode guid="f62e59f0-a1b8-404b-972e-02d8e222015e" type="PythonNodeModels.PythonNode" nickname="Python Script" x="250" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="3">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <Script># dynamo version 1.3.0
# author - min.naung@mgjean https://twentytwopaths.wordpress.com/contact/
import clr
clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

surface = IN[0];
upanel = IN[1];
vpanel = IN[2];

DiamondPanel = [];
TrianglePanel = []; 
ustep = 1.0/upanel;
vstep = 1.0/vpanel;
for i in range(0,upanel+1,1):
	for j in range(0,vpanel+1,1):
		if (i+j) % 2 == 0:
			pointA = surface.PointAtParameter(0,0);
			pointB = surface.PointAtParameter(0,0);
			pointC = surface.PointAtParameter(0,0);
			pointD = surface.PointAtParameter(0,0);

			if i &gt; 0:
				pointA = surface.PointAtParameter((i-1)*ustep, j*vstep);

			else:
				pointB = surface.PointAtParameter(i * ustep, j*vstep)

			if j &gt; 0:
				pointB = surface.PointAtParameter(i * ustep, (j-1) * vstep);
			else:
				pointB = surface.PointAtParameter(i *ustep, j * vstep);

			if i &lt; upanel:
				pointC = surface.PointAtParameter((i+1) * ustep, j * vstep);

			else:
				pointC = surface.PointAtParameter(i * ustep, j* vstep);

			if j &lt;= (vpanel - 1):
				pointD = surface.PointAtParameter(i*ustep, (j+1)*vstep);
			else:
				pointD = surface.PointAtParameter(i * ustep, j * vstep);

			if i &gt; 0 and j &gt; 0 and i &lt; upanel and j &lt;= (vpanel - 1):

				points = [];
				points.append(pointA);
				points.append(pointB);
				points.append(pointC);
				points.append(pointD);
		
				panel = Surface.ByPerimeterPoints(points);
		
				DiamondPanel.append(panel);
		
				
			if i &gt; 0 and j&gt;0 and i &lt; upanel and j &lt; vpanel:
				points = [];
			else:
				if i == 0 and j == 0:
					points = []
					points.append(pointB);
					points.append(pointC);
					points.append(pointD);

					panel = Surface.ByPerimeterPoints(points);
					TrianglePanel.append(panel);
				
				if i == 0 and j == vpanel:
					points = []
					points.append(pointB);
					points.append(pointC);
					points.append(pointD);

					panel = Surface.ByPerimeterPoints(points);
					TrianglePanel.append(panel);
				
				if i == upanel and j == 0:
					points = []
					points.append(pointC);
					points.append(pointD);
					points.append(pointA);

					panel = Surface.ByPerimeterPoints(points);
					TrianglePanel.append(panel);

				if i == upanel and j == vpanel:
					points = []
					points.append(pointA);
					points.append(pointB);
					points.append(pointC);

					panel = Surface.ByPerimeterPoints(points);
					TrianglePanel.append(panel);
				
				if i == 0 and j &gt; 0 and j &lt; vpanel:
					points = []
					points.append(pointB);
					points.append(pointC);
					points.append(pointD);

					panel = Surface.ByPerimeterPoints(points);
					TrianglePanel.append(panel);

				if i == upanel and j &gt; 0 and j &lt; vpanel:
					points = []
					points.append(pointA);
					points.append(pointB);
					points.append(pointD);

					panel = Surface.ByPerimeterPoints(points);
					TrianglePanel.append(panel);

				if j==0 and i &gt; 0 and j &lt; vpanel:
					points = []
					points.append(pointA);
					points.append(pointC);
					points.append(pointD);

					panel = Surface.ByPerimeterPoints(points);
					TrianglePanel.append(panel);

				if j == vpanel and i &gt; 0 and i &lt; upanel:
					points = []
					points.append(pointA);
					points.append(pointB);
					points.append(pointC);

					panel = Surface.ByPerimeterPoints(points);
					TrianglePanel.append(panel);

OUT = DiamondPanel,TrianglePanel</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="a91cd59d-9067-4fcf-990b-396b1a34f49b" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-97.6" y="-18.4" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="// Surface geometry&#xD;&#xA;GeometrySurface;" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="7c14a0de-2922-4f1a-bdaa-7d32683459fc" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-78.4" y="93.9999999999999" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Udivision" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="bd364a68-4281-4662-b574-29381ab9f8d2" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-88" y="165.6" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="Vdivision" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="3b518f58-6cf1-4073-8d73-c01b5edf793a" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="542.6" y="-6.40000000000001" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="DiamondPanel" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="24427a6e-bc05-4687-b5a7-1776e0cd612f" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="632.625485961123" y="114.2686825054" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="TrianglePanel" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="164d3c7a-c916-439c-a0e2-b93c9da94eb4" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="416.686825053996" y="57.9546436285097" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="i[0];&#xA;i[1];" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="f62e59f0-a1b8-404b-972e-02d8e222015e" start_index="0" end="164d3c7a-c916-439c-a0e2-b93c9da94eb4" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a91cd59d-9067-4fcf-990b-396b1a34f49b" start_index="0" end="f62e59f0-a1b8-404b-972e-02d8e222015e" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="7c14a0de-2922-4f1a-bdaa-7d32683459fc" start_index="0" end="f62e59f0-a1b8-404b-972e-02d8e222015e" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="bd364a68-4281-4662-b574-29381ab9f8d2" start_index="0" end="f62e59f0-a1b8-404b-972e-02d8e222015e" end_index="2" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="164d3c7a-c916-439c-a0e2-b93c9da94eb4" start_index="0" end="3b518f58-6cf1-4073-8d73-c01b5edf793a" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="164d3c7a-c916-439c-a0e2-b93c9da94eb4" start_index="1" end="24427a6e-bc05-4687-b5a7-1776e0cd612f" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-150.513229370117" eyeY="242.923721313477" eyeZ="63.0959854125977" lookX="53.7948799133301" lookY="-306.833923339844" lookZ="-111.830604553223" upX="0.3576799929142" upY="0.564967095851898" upZ="-0.743557214736938" />
  </Cameras>
</Workspace>