<Workspace Version="1.3.4.6666" X="-68.106786997132" Y="264.687420059092" zoom="0.888789228297156" ScaleFactor="1" Name="Home" Description="" RunType="Manual" RunPeriod="1000" HasRunWithoutCrash="True">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="cf85d49f-c03a-4ec2-91d1-eb1bd8280f31" type="PythonNodeModels.PythonNode" nickname="Python Script" x="352.68657795071" y="-84.8290642871838" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="true" inputcount="0">
      <Script># dynamo version - 1.3.0 

import clr,sys
clr.AddReference("RevitAPI")
clr.AddReference("RevitServices")

from Autodesk.Revit.DB import *
from RevitServices.Persistence import DocumentManager

pyt_path = r'C:\Program Files (x86)\IronPython 2.7\Lib';
sys.path.append(pyt_path);

import shutil,os

doc = DocumentManager.Instance.CurrentDBDocument;
link_docs = FilteredElementCollector(doc).OfClass(RevitLinkInstance);


# the current document path
# if the current document haven't created it returns ""
docPath = doc.PathName 
docName = os.path.basename(docPath).split(".")[0]
dirName = os.path.dirname(docPath)

if docName == "":
	docName = "TheCurrentDocument"

if dirName == "":	
	# make dir in the current user desktop
	dirName = os.path.join(os.path.join(os.environ["USERPROFILE"]),"Desktop")

# destination folder
folder = docName + "_LinkFileExport"
destFolder = os.path.join(dirName,folder)

# if folder does not exit
if not os.path.exists(destFolder):
	# create destination folder
	os.mkdir(destFolder)

# collect filepaths 
filepaths = []
for i in link_docs:
	# get link documents
	ldoc = i.GetLinkDocument()
	# if link is loaded
	if ldoc:
		# link file path
		lpath = ldoc.PathName
		# check if collected
		if lpath not in filepaths:
			filepaths.append(lpath);
			
# new filepaths and remove existing (override)
newfiles = []
for path in filepaths:
	newpath = os.path.join(destFolder, os.path.basename(path))
	newfiles.append(newpath)
	if os.path.exists(newpath):
		os.remove(newpath)

# copy files
output = []
for path in filepaths:
	# copy file 
	shutil.copy(path, destFolder);


OUT = newfiles


</Script>
    </PythonNodeModels.PythonNode>
  </Elements>
  <Connectors />
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>