<Workspace Version="1.3.4.6666" X="119.811380548961" Y="166.142211646884" zoom="0.70823125" ScaleFactor="1" Name="ExportRevitLinks" Description="Export all loaded revit link documents to a given directory." ID="6e24ceed-ac89-4a9b-a1d0-3b0b6825bc7a" Category="Quasar.LinkDocumentUtility">
  <NamespaceResolutionMap>
    <ClassMap partialName="Directory" resolvedName="DSCore.IO.Directory" assemblyName="DSCoreNodes.dll" />
    <ClassMap partialName="Strings" resolvedName="Lists.Strings" assemblyName="LunchBox.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <PythonNodeModels.PythonNode guid="deae1c9b-4196-43d7-8534-e58dc0a0fcd8" type="PythonNodeModels.PythonNode" nickname="Python Script" x="218" y="-2.40000000000003" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <PortInfo index="0" default="False" />
      <Script># dynamo version - 1.3.4 
# author - min.naung https://twentytwo.space

import clr,sys
clr.AddReference("RevitAPI")
clr.AddReference("RevitServices")

from Autodesk.Revit.DB import *
from RevitServices.Persistence import DocumentManager

pyt_path = r'C:\Program Files (x86)\IronPython 2.7\Lib';
sys.path.append(pyt_path);

import shutil,os

doc = DocumentManager.Instance.CurrentDBDocument;
link_docs = FilteredElementCollector(doc).OfClass(RevitLinkInstance);


# the current document path
# if the current document haven't created it returns ""
docPath = doc.PathName 
docName = os.path.basename(docPath).split(".")[0]
#input directory
dirName = IN[0]

if docName == "":
	docName = "TheCurrentDocument"

# destination folder
folder = docName + "_LinkFileExport"
destFolder = os.path.join(dirName,folder)

# if folder does not exit
if not os.path.exists(destFolder):
	# create destination folder
	os.mkdir(destFolder)

# collect filepaths 
filepaths = []
for i in link_docs:
	# get link documents
	ldoc = i.GetLinkDocument()
	# if link is loaded
	if ldoc:
		# link file path
		lpath = ldoc.PathName
		# check if collected
		if lpath not in filepaths:
			filepaths.append(lpath);
			
# new filepaths and remove existing (override)
newfiles = []
for path in filepaths:
	newpath = os.path.join(destFolder, os.path.basename(path))
	newfiles.append(newpath)
	if os.path.exists(newpath):
		os.remove(newpath)

# copy files
output = []
for path in filepaths:
	# copy file 
	shutil.copy(path, destFolder);

OUT = newfiles


</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="27a20125-36a1-4c26-8714-f8d9556ce428" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="389" y="-4" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="// exported link file paths&#xD;&#xA;FilePaths" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="a5d5e9a2-57ca-4ba1-a365-917da1f40e29" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-86.4000000000001" y="-4.00000000000003" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="// a folder path&#xD;&#xA;OutputDirectory" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="deae1c9b-4196-43d7-8534-e58dc0a0fcd8" start_index="0" end="27a20125-36a1-4c26-8714-f8d9556ce428" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="a5d5e9a2-57ca-4ba1-a365-917da1f40e29" start_index="0" end="deae1c9b-4196-43d7-8534-e58dc0a0fcd8" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>