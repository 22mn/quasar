{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "link-level-grid",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "e39ad7570b6d4cf981927c6f474f5c26",
      "Name": "Boolean",
      "Type": "boolean",
      "Value": "true",
      "Description": "Selection between a true and false."
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Quasar.ElementGraphics.LinkLevelGrid@bool",
      "Id": "67bee5c96bad45bc96fae9adfa366b80",
      "Inputs": [
        {
          "Id": "0143421f1fd84372b0210bf35a1d5d4a",
          "Name": "Hide",
          "Description": "Hide = true, Unhide = false\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ed948469b5843759f2251f47b1f2c1e",
          "Name": "string",
          "Description": "return message",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Hide/Unhide levels and grids from link documents.\n\nElementGraphics.LinkLevelGrid (Hide: bool = true): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "e39ad7570b6d4cf981927c6f474f5c26",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a318013bf2d84127b7e7008c290371f2",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# dynamo version - 1.3.2\r\n# author - min.naung\r\n\r\nimport clr\r\nclr.AddReference(\"RevitAPI\")\r\nclr.AddReference(\"RevitServices\")\r\nimport System\r\n\r\nfrom System.Collections.Generic import List\r\nfrom Autodesk.Revit.DB import *\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\n# document manager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n# start transaction\r\nTransactionManager.Instance.EnsureInTransaction(doc);\r\n\r\n# active view\r\nactive_view = doc.ActiveView\r\n# filter name \"can name anything\"\r\nifilter = \"LinkLevelGrid_QuasarPackage\"\r\nfound = False\r\n\r\n# input[0] boolean\r\nhide = False if IN[0] else True\r\n\r\n# collect all filter elements\r\nallFilters = FilteredElementCollector(doc).OfClass(FilterElement).ToElements()\r\n\r\n# get filters from current view\r\nviewFilters = active_view.GetFilters();\r\n# collect filters' names\r\nviewFiltersName = [doc.GetElement(i).Name.ToString() for i in viewFilters]\r\n\r\n# loop each filter\r\nfor fter in allFilters:\r\n\t# filter already have in doc but not in current view\r\n\tif ifilter == fter.Name.ToString() and ifilter not in viewFiltersName:\r\n\t\t# add filter\r\n\t\tactive_view.AddFilter(fter.Id)\r\n\t\t# set filter visibility\r\n\t\tactive_view.SetFilterVisibility(fter.Id, hide);\r\n\t\tfound = True\r\n\t# filter already have in doc and current view\r\n\tif ifilter == fter.Name.ToString() and ifilter in viewFiltersName:\r\n\t\t# set filter visibility\r\n\t\tactive_view.SetFilterVisibility(fter.Id, hide);\r\n\t\tfound = True\r\n\t\t\r\n# if filter not found in doc\r\nif not found:\r\n\t# all grids in doc\r\n\tgrids = FilteredElementCollector(doc).OfClass(Grid).ToElements()\r\n\t# all levels in doc\r\n\tlevels = FilteredElementCollector(doc).OfClass(Level).ToElements()\r\n\t# collect category id from grid and level\r\n\tCateIds = List[ElementId]([grids[0].Category.Id,levels[0].Category.Id])\r\n\t\r\n\t# type ids from grids \r\n\tgridTypeIds = set([i.GetTypeId() for i in grids])\r\n\t# type ids from levels\r\n\tlevelTypeIds = set([i.GetTypeId() for i in levels])\r\n\t\r\n\t# get grid type element\r\n\ttype_elems = [doc.GetElement(i) for i in gridTypeIds]\r\n\t# get level type element\r\n\ttype_elems.extend([doc.GetElement(l) for l in levelTypeIds])\r\n\t\r\n\t# loop type elements\r\n\tfor elem in type_elems:\r\n\t\t# if \"_quasar\" not include in type name\r\n\t\tif not \"_quasar\" in elem.LookupParameter(\"Type Name\").AsString():\r\n\t\t\t# add \"_quasar\" in type name\r\n\t\t\telem.Name = elem.LookupParameter(\"Type Name\").AsString() + \"_quasar\";\r\n\t# get type names\r\n\ttype_names = [i.LookupParameter(\"Type Name\").AsString() for i in type_elems]\r\n\t# type name parameter id\r\n\tparamId = type_elems[0].LookupParameter(\"Type Name\").Id\r\n\t# create a \"not ends with\" filter rule\r\n\tnotendswith = ParameterFilterRuleFactory.CreateNotEndsWithRule(paramId,\"_quasar\",False)\r\n\t# create parameter filter element\r\n\tparamFilterElem = ParameterFilterElement.Create(doc, ifilter,CateIds,[notendswith])\r\n\t# set filter overrides (same with add filter to current)\r\n\tactive_view.SetFilterOverrides(paramFilterElem.Id, OverrideGraphicSettings())\r\n\t# set filter visibility\r\n\tactive_view.SetFilterVisibility(paramFilterElem.Id, hide)\r\n\t\r\n# transaction done\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\n# output\r\nOUT = \"DONE!\"\r\n\r\n",
      "VariableInputPorts": true,
      "Id": "47c88c85967f422d82b3379afd1a7433",
      "Inputs": [
        {
          "Id": "895b4e44bc8a4941bb3f0a1bed1bc3a1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a47109fdc598405c888d4a448a8abfa6",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    }
  ],
  "Connectors": [
    {
      "Start": "a318013bf2d84127b7e7008c290371f2",
      "End": "0143421f1fd84372b0210bf35a1d5d4a",
      "Id": "7513e8ff41fc44949eec2febc63ac6a6"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.0.1.5055",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "ElementGraphics.LinkLevelGrid",
        "Id": "67bee5c96bad45bc96fae9adfa366b80",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 251.054005934718,
        "Y": 165.227299703264
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "e39ad7570b6d4cf981927c6f474f5c26",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 68.3489614243324,
        "Y": 166.366765578635
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "47c88c85967f422d82b3379afd1a7433",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 287.69614243323446,
        "Y": 373.36973293768534
      }
    ],
    "Annotations": [
      {
        "Id": "8e39ec20debf4b5b802b9dc7e653c4a0",
        "Title": "IronPython Version",
        "Nodes": [],
        "Left": 289.44688427299712,
        "Top": 329.54183976261123,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "52bc7a5a183541fe9afd5f2c6c1e246c",
        "Title": "- Hide/Unhide levels and grids from link documents.",
        "Nodes": [],
        "Left": 243.80890207715123,
        "Top": 125.2290801186943,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c1e1e8ed67fe46f6b3c1ab918593f746",
        "Title": "** Quasar Package Sample File **",
        "Nodes": [],
        "Left": 171.70207715133512,
        "Top": 47.524035608308509,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 125.61599999999996,
    "Y": 91.836,
    "Zoom": 0.8425
  }
}